(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{360:function(t,s,a){t.exports=a.p+"assets/img/tmi_cluster.296c4fa2.png"},361:function(t,s,a){t.exports=a.p+"assets/img/invite_screen.3f061dbd.png"},385:function(t,s,a){"use strict";a.r(s);var e=a(46),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"tmi-cluster"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tmi-cluster"}},[t._v("#")]),t._v(" TMI Cluster")]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#introduction"}},[t._v("Introduction")])]),e("li",[e("a",{attrs:{href:"#installation"}},[t._v("Installation")]),e("ul",[e("li",[e("a",{attrs:{href:"#register-frontend-routes"}},[t._v("Register Frontend Routes")])]),e("li",[e("a",{attrs:{href:"#keeping-tmi-cluster-assets-updated"}},[t._v("Keeping TMI Cluster Assets Updated")])])])]),e("li",[e("a",{attrs:{href:"#configuration"}},[t._v("Configuration")]),e("ul",[e("li",[e("a",{attrs:{href:"#redis-connection"}},[t._v("Redis Connection")])]),e("li",[e("a",{attrs:{href:"#tmi-client-configuration"}},[t._v("TMI Client Configuration")])]),e("li",[e("a",{attrs:{href:"#auto-scaling"}},[t._v("Auto Scaling")])])])]),e("li",[e("a",{attrs:{href:"#running-tmi-cluster"}},[t._v("Running TMI Cluster")])]),e("li",[e("a",{attrs:{href:"#watching-for-file-changes"}},[t._v("Watching For File Changes")])]),e("li",[e("a",{attrs:{href:"#deploying-tmi-cluster"}},[t._v("Deploying TMI Cluster")]),e("ul",[e("li",[e("a",{attrs:{href:"#installing-supervisor"}},[t._v("Installing Supervisor")])]),e("li",[e("a",{attrs:{href:"#supervisor-configuration"}},[t._v("Supervisor Configuration")])]),e("li",[e("a",{attrs:{href:"#starting-supervisor"}},[t._v("Starting Supervisor")])])])]),e("li",[e("a",{attrs:{href:"#channel-management"}},[t._v("Channel Management")]),e("ul",[e("li",[e("a",{attrs:{href:"#list-of-channel-managers"}},[t._v("List of Channel Managers")])]),e("li",[e("a",{attrs:{href:"#invite-screen"}},[t._v("Invite Screen")])]),e("li",[e("a",{attrs:{href:"#auto-join-part"}},[t._v("Auto Join & Part")])]),e("li",[e("a",{attrs:{href:"#restrict-sending-messages"}},[t._v("Restrict Sending Messages")])])])]),e("li",[e("a",{attrs:{href:"#sending-messages-via-tmi-cluster"}},[t._v("Sending Messages via TMI-Cluster")])]),e("li",[e("a",{attrs:{href:"#events"}},[t._v("Events")]),e("ul",[e("li",[e("a",{attrs:{href:"#handle-irc-messages"}},[t._v("Handle IRC Messages")])]),e("li",[e("a",{attrs:{href:"#queued-event-listeners"}},[t._v("Queued Event Listeners")])]),e("li",[e("a",{attrs:{href:"#list-of-all-tmi-cluster-events"}},[t._v("List of all TMI Cluster Events")])])])]),e("li",[e("a",{attrs:{href:"#notifications"}},[t._v("Notifications")])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"introduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),e("p",[e("img",{attrs:{src:a(360),alt:""}})]),t._v(" "),e("p",[t._v("TMI Cluster is a Laravel package that smoothly enables a highly scalable IRC client cluster for Twitch. TMI Cluster consists of multiple supervisors that can be deployed on multiple hosts. The core is inspired by Horizon, which handles the complex IRC process management.")]),t._v(" "),e("p",[t._v("The cluster stores its data in the database and has a Redis Command Queue to send IRC commands and receive messages.")]),t._v(" "),e("h2",{attrs:{id:"installation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),e("p",[t._v("You may use Composer to install TMI Cluster into your Laravel project:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("composer")]),t._v(" require ghostzero/tmi-cluster\n")])])]),e("p",[t._v("After installing TMI Cluster, publish its assets using the "),e("code",[t._v("tmi-cluster:install")]),t._v(" and "),e("code",[t._v("migrate")]),t._v(" Artisan command:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("php artisan tmi-cluster:install\n\nphp artisan migrate\n")])])]),e("h3",{attrs:{id:"register-frontend-routes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#register-frontend-routes"}},[t._v("#")]),t._v(" Register Frontend Routes")]),t._v(" "),e("p",[t._v("To make your frontend accessible under "),e("code",[t._v("/tmi-cluster")]),t._v(" you have to add the following route declaration in your "),e("code",[t._v("web.php")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("GhostZero"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("TmiCluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Facades"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("TmiCluster")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("TmiCluster")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("routes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"keeping-tmi-cluster-assets-updated"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keeping-tmi-cluster-assets-updated"}},[t._v("#")]),t._v(" Keeping TMI Cluster Assets Updated")]),t._v(" "),e("p",[t._v("In addition, when upgrading to any new TMI Cluster version, you should re-publish TMI Cluster's assets:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("php artisan tmi-cluster:publish\n")])])]),e("p",[t._v("To ensure TMI Cluster's assets are updated when a new version is downloaded, you may add a Composer hook inside your project's composer.json file to automatically publish TMI Cluster's latest assets:")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"post-update-cmd"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@php artisan tmi-cluster:publish --ansi"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[t._v("#")]),t._v(" Configuration")]),t._v(" "),e("p",[t._v("After publishing TMI Cluster's assets, its primary configuration file will be located at "),e("code",[t._v("config/tmi-cluster.php")]),t._v(". This configuration file allows you to configure your process options and each configuration option includes a description of its purpose, so be sure to thoroughly explore this file.")]),t._v(" "),e("h3",{attrs:{id:"redis-connection"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis-connection"}},[t._v("#")]),t._v(" Redis Connection")]),t._v(" "),e("p",[t._v("A Redis Cache is required for the TMI Cluster. The configuration is already pre-configured. If you have more than one TMI Cluster running on your Redis, then you should adjust the cluster prefix.")]),t._v(" "),e("h3",{attrs:{id:"tmi-client-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tmi-client-configuration"}},[t._v("#")]),t._v(" TMI Client Configuration")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("We ourselves use the TMI Cluster only with Verified Bot credentials. We do not recommend this cluster for normal accounts. We also have no experience with Known Bot accounts so far.")])]),t._v(" "),e("h3",{attrs:{id:"auto-scaling"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#auto-scaling"}},[t._v("#")]),t._v(" Auto Scaling")]),t._v(" "),e("p",[t._v("TMI Cluster comes directly with Auto-Scaling, since we initially developed this cluster for applications with over 10,000 joined channels. It will scale out by one instance if average channel usage is above 70%, and scale in by one instance if channel usage falls below 50%.")]),t._v(" "),e("p",[t._v("The flapping situation can be controlled by choosing an adequate margin between the scale-out and scale-in thresholds.")]),t._v(" "),e("p",[t._v("You can also limit the minimum and maximum processes.")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'auto_scale'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'restore'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'processes'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'min'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'max'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'thresholds'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'channels'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'scale_in'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'scale_out'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("70")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("h2",{attrs:{id:"running-tmi-cluster"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#running-tmi-cluster"}},[t._v("#")]),t._v(" Running TMI Cluster")]),t._v(" "),e("p",[t._v("Once you have configured your TMI Cluster in the "),e("code",[t._v("config/tmi-cluster.php")]),t._v(" configuration file, you may start the cluster by using the "),e("code",[t._v("tmi-cluster")]),t._v(" Artisan command. This single command will start one singe supervisor with all of your configured processes:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("php artisan tmi-cluster\n")])])]),e("p",[t._v("You can also run this command multiple times to spawn multiple supervisors.")]),t._v(" "),e("p",[t._v("You may check the current status of your TMI Cluster by using the "),e("code",[t._v("tmi-cluster:list")]),t._v(" Artisan command:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("php artisan tmi-cluster:list\n")])])]),e("h2",{attrs:{id:"watching-for-file-changes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#watching-for-file-changes"}},[t._v("#")]),t._v(" Watching For File Changes")]),t._v(" "),e("p",[t._v("Since your application is loaded in memory once when the TMI-Cluster starts, any changes to your application's files will not be reflected on incoming irc messages. For convenience, you may use the "),e("code",[t._v("--watch")]),t._v(" flag to instruct TMI-Cluster to automatically restart the supervisor on any file changes within your application:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("php artisan tmi-cluster --watch\n")])])]),e("p",[t._v("Before using this feature, you should ensure that "),e("a",{attrs:{href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node"),e("OutboundLink")],1),t._v(" is installed within your local development environment. In addition, you should install the "),e("a",{attrs:{href:"https://github.com/paulmillr/chokidar",target:"_blank",rel:"noopener noreferrer"}},[t._v("Chokidar"),e("OutboundLink")],1),t._v(" file-watching library within your project:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save-dev chokidar\n")])])]),e("p",[t._v("You may configure the directories and files that should be watched using the watch configuration option within your application's "),e("code",[t._v("config/tmi-cluster.php")]),t._v(" configuration file.")]),t._v(" "),e("h2",{attrs:{id:"deploying-tmi-cluster"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deploying-tmi-cluster"}},[t._v("#")]),t._v(" Deploying TMI Cluster")]),t._v(" "),e("p",[t._v("If you are deploying TMI Cluster to a live server, you should configure a process monitor to monitor the "),e("code",[t._v("php artisan tmi-cluster")]),t._v(" command and restart it if it quits unexpectedly. When deploying fresh code to your server, you will need to instruct the master TMI Cluster process to terminate so it can be restarted by your process monitor and receive your code changes.")]),t._v(" "),e("h3",{attrs:{id:"installing-supervisor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installing-supervisor"}},[t._v("#")]),t._v(" Installing Supervisor")]),t._v(" "),e("p",[t._v("Supervisor is a process monitor for the Linux operating system, and will automatically restart your "),e("code",[t._v("tmi-cluster")]),t._v(" process if it fails. To install Supervisor on Ubuntu, you may use the following command:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" supervisor\n")])])]),e("h3",{attrs:{id:"supervisor-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#supervisor-configuration"}},[t._v("#")]),t._v(" Supervisor Configuration")]),t._v(" "),e("p",[t._v("Supervisor configuration files are typically stored in the "),e("code",[t._v("/etc/supervisor/conf.d")]),t._v(" directory. Within this directory, you may create any number of configuration files that instruct supervisor how your processes should be monitored. For example, let's create a "),e("code",[t._v("tmi-cluster.conf")]),t._v(" file that starts and monitors a "),e("code",[t._v("tmi-cluster")]),t._v(" process:")]),t._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("[program:tmi-cluster]\nprocess_name=%(program_name)s\ncommand=php /home/ghostzero/tmi-app/artisan tmi-cluster\nautostart=true\nautorestart=true\nuser=ghostzero\nredirect_stderr=true\nstdout_logfile=/home/ghostzero/tmi-app/tmi-cluster.log\nstopwaitsecs=3600\n")])])]),e("h3",{attrs:{id:"starting-supervisor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#starting-supervisor"}},[t._v("#")]),t._v(" Starting Supervisor")]),t._v(" "),e("p",[t._v("Once the configuration file has been created, you may update the Supervisor configuration and start the processes using the following commands:")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" supervisorctl reread\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" supervisorctl update\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" supervisorctl start tmi-cluster\n")])])]),e("p",[t._v("For more information on Supervisor, consult the "),e("a",{attrs:{href:"http://supervisord.org/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Supervisor documentation"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"channel-management"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#channel-management"}},[t._v("#")]),t._v(" Channel Management")]),t._v(" "),e("p",[t._v("The new Channel Managers available from version "),e("code",[t._v("^2.2")]),t._v(" allow to automatically manage the channels within the TMI cluster.")]),t._v(" "),e("p",[t._v("For compatibility reasons we have disabled this feature by default. This means that the Channel Manager is set to "),e("a",{attrs:{href:"#dummy-channel-manager"}},[t._v("Dummy")]),t._v(".")]),t._v(" "),e("h3",{attrs:{id:"list-of-channel-managers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list-of-channel-managers"}},[t._v("#")]),t._v(" List of Channel Managers")]),t._v(" "),e("h4",{attrs:{id:"dummy-channel-manager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dummy-channel-manager"}},[t._v("#")]),t._v(" Dummy Channel Manager")]),t._v(" "),e("p",[t._v("This channel manager allows all joins and disables the invite screen, and the auto join & part feature. This is the default behavior of TMI-Cluster.")]),t._v(" "),e("h4",{attrs:{id:"database-channel-manager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#database-channel-manager"}},[t._v("#")]),t._v(" Database Channel Manager")]),t._v(" "),e("p",[t._v("The Database Channel Manager stores all channels and their authorizations and configurations in the database. If this channel manager is used, then all channels must give an authorization in advance. This can be done programmatically or by the invite screen.")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("GhostZero"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("TmiCluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Contracts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ChannelManager")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("GhostZero"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("TmiCluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Contracts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ChannelDistributor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$channelManager")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ChannelManager")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// allow our tmi cluster to join ghostzero's channel")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$channelManager")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("authorize")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'ghostzero'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'reconnect'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"invite-screen"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#invite-screen"}},[t._v("#")]),t._v(" Invite Screen")]),t._v(" "),e("p",[t._v("For verified bots, Twitch expects that streamers themselves add the bot to their chat. This can be done by a "),e("code",[t._v("!join")]),t._v(" command or by an invite screen (TMI-Cluster does not come with any commands out of the box). To reduce complexity, we provide an invite screen that allows the streamer to add the bot in a self-service manner.\nThe invite screen is accessible at "),e("code",[t._v("/tmi-cluster/invite")]),t._v(".")]),t._v(" "),e("p",[e("img",{attrs:{src:a(361),alt:""}})]),t._v(" "),e("h4",{attrs:{id:"implement-the-invite-screen"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#implement-the-invite-screen"}},[t._v("#")]),t._v(" Implement the Invite Screen")]),t._v(" "),e("p",[t._v("In order to use the Invite Screen, the authenticated user must implement the "),e("code",[t._v("Invitable")]),t._v(" interface which must return the twitch login name.")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("GhostZero"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("TmiCluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Contracts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Invitable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("Illuminate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Foundation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Auth"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("User")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Authenticatable"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Authenticatable")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Invitable")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTwitchLogin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token keyword return-type"}},[t._v("string")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$this")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("twitch_login")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   \n")])])]),e("h3",{attrs:{id:"auto-join-part"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#auto-join-part"}},[t._v("#")]),t._v(" Auto Join & Part")]),t._v(" "),e("p",[t._v("Normally you are responsible for your join/parts, because we want you to be in control. However, with the new channel manager, we have come up with a new concept of how we want to deal with channels in the long term. Our experience with larger installations of TMI Cluster is (with over 250,000 connected channels) that we want to part inactive channels after a short time.")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'channel_manager'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'use'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name class-name-fully-qualified static-context"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("GhostZero"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("TmiCluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Repositories"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("DatabaseChannelManager")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'auto_cleanup'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'enabled'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'interval'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'max_delay'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'channel'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'restrict_messages'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'stale'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("168")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),e("p",[t._v("If this feature is enabled (by setting the "),e("code",[t._v("channel_manager.auto_cleanup.enabled")]),t._v(" to "),e("code",[t._v("true")]),t._v("), the TMI-Cluster parts all channels after 168 hours (7 days), where the last join statement was received. This can be modified by setting the "),e("code",[t._v("channel_manager.channel.stale")]),t._v(" value.")]),t._v(" "),e("p",[t._v("The part can be delayed by executing an "),e("code",[t._v("acknowledged")]),t._v(" statement with the "),e("code",[t._v("ChannelManager")]),t._v(". Alternatively, you can simply call the "),e("code",[t._v("join")]),t._v(" method in "),e("code",[t._v("ChannelDistributor")]),t._v(".\nThis shows the channel manager that there is still some interest in this channel to join it further.")]),t._v(" "),e("p",[t._v("In larger installations this makes sense in connection with the "),e("code",[t._v("stream.online")]),t._v(" event through the "),e("a",{attrs:{href:"https://dev.twitch.tv/docs/eventsub",target:"_blank",rel:"noopener noreferrer"}},[t._v("Twitch EventSub"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("Don't forget that you need an authorization from the channel in advance, if there is no authorization, or it has been revoked, then you can't join the channel.")])]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("GhostZero"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("TmiCluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Contracts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ChannelDistributor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("GhostZero"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("TmiCluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Contracts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ChannelManager")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// our recommended way, with joining the irc cluster (if not present)")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$channelManager")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ChannelDistributor")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$channelManager")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'ghostzero'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// alternative, without joining the irc cluster (if not present)")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$channelManager")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("app")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("ChannelManager")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$channelManager")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("acknowledged")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'ghostzero'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"restrict-sending-messages"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#restrict-sending-messages"}},[t._v("#")]),t._v(" Restrict Sending Messages")]),t._v(" "),e("p",[t._v("TMI Cluster allows you to send IRC messages only to channels that have been pre-authorized. This feature is disabled by default and can be enabled by setting the config "),e("code",[t._v("channel_mananger.channel.restrict_messages")]),t._v(" to "),e("code",[t._v("true")]),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"sending-messages-via-tmi-cluster"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sending-messages-via-tmi-cluster"}},[t._v("#")]),t._v(" Sending Messages via TMI-Cluster")]),t._v(" "),e("p",[t._v("You can send a message within the laravel ecosystem at any time, you don't even need to have the TMI cluster connected in the target chat. The messages are processed async from the TMI cluster queue.")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("GhostZero"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("TmiCluster"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Facades"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("TmiCluster")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("TmiCluster")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendMessage")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'ghostzero'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'Hello World!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" Events")]),t._v(" "),e("h3",{attrs:{id:"handle-irc-messages"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#handle-irc-messages"}},[t._v("#")]),t._v(" Handle IRC Messages")]),t._v(" "),e("p",[t._v("To handle incoming irc messages like, chat messages and commands, you need to register an event subscriber into your Laravel application. Event subscribers are classes that may subscribe to multiple events from within the class itself, allowing you to define several event handlers within a single class. The TMI Cluster emits all "),e("RouterLink",{attrs:{to:"/docs/events.html"}},[t._v("TMI events")]),t._v(".")],1),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("App"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Listeners")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("GhostZero"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Tmi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Events"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Twitch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("CheerEvent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("GhostZero"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Tmi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Events"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Twitch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("MessageEvent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("GhostZero"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Tmi"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Events"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Twitch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("SubEvent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TmiEventSubscriber")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleMessageEvent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("MessageEvent")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$event")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword return-type"}},[t._v("void")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// handle your message event")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleCheerEvent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("CheerEvent")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$event")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword return-type"}},[t._v("void")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// handle your cheer event")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleSubEvent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name type-declaration"}},[t._v("SubEvent")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$event")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword return-type"}},[t._v("void")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// handle your sub event")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * Register the listeners for the subscriber.\n     *\n     * @return array\n     */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword return-type"}},[t._v("array")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("MessageEvent")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__CLASS__")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'handleMessageEvent'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("CheerEvent")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__CLASS__")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'handleMessageEvent'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("SubEvent")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("__CLASS__")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'handleMessageEvent'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),e("p",[t._v("After writing the subscriber, you are ready to register it with the event dispatcher. You may register subscribers using the "),e("code",[t._v("$subscribe")]),t._v(" property on the "),e("code",[t._v("EventServiceProvider")]),t._v(". For example, let's add the "),e("code",[t._v("TmiEventSubscriber")]),t._v(" to the list:")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("App"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Providers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("App"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Listeners"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("TmiEventSubscriber")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("Illuminate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Foundation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Support"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Providers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("EventServiceProvider")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" ServiceProvider"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventServiceProvider")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceProvider")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * The event listener mappings for the application.\n     *\n     * @var array\n     */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$listen")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * The subscriber classes to register.\n     *\n     * @var array\n     */")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("protected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$subscribe")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("TmiEventSubscriber")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),e("h3",{attrs:{id:"queued-event-listeners"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#queued-event-listeners"}},[t._v("#")]),t._v(" Queued Event Listeners")]),t._v(" "),e("p",[t._v("Queueing listeners can be beneficial if your listener is going to perform a slow task such as making an HTTP request. Before using queued listeners, make sure to "),e("a",{attrs:{href:"https://laravel.com/docs/9.x/queues",target:"_blank",rel:"noopener noreferrer"}},[t._v("configure your queue"),e("OutboundLink")],1),t._v(" and start a queue worker on your server or local development environment.")]),t._v(" "),e("p",[t._v("To specify that a listener should be queued, add the "),e("code",[t._v("ShouldQueue")]),t._v(" interface to the listener class. Listeners generated by the "),e("code",[t._v("event:generate")]),t._v(" and "),e("code",[t._v("make:listener")]),t._v(" Artisan commands already have this interface imported into the current namespace, so you can use it immediately:")]),t._v(" "),e("div",{staticClass:"language-php extra-class"},[e("pre",{pre:!0,attrs:{class:"language-php"}},[e("code",[e("span",{pre:!0,attrs:{class:"token php language-php"}},[e("span",{pre:!0,attrs:{class:"token delimiter important"}},[t._v("<?php")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("App"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Listeners")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token package"}},[t._v("Illuminate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Contracts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Queue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("ShouldQueue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TmiEventSubscriber")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ShouldQueue")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),e("h3",{attrs:{id:"list-of-all-tmi-cluster-events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list-of-all-tmi-cluster-events"}},[t._v("#")]),t._v(" List of all TMI Cluster Events")]),t._v(" "),e("p",[t._v("You will find all TMI Cluster Events within the "),e("code",[t._v("GhostZero\\TmiCluster\\Events")]),t._v(" namespace:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("ClusterClientRegistered")])]),t._v(" "),e("li",[e("code",[t._v("ClusterClientTerminated")])]),t._v(" "),e("li",[e("code",[t._v("IrcCommandEvent")])]),t._v(" "),e("li",[e("code",[t._v("IrcMessageEvent")])]),t._v(" "),e("li",[e("code",[t._v("PeriodicTimerCalled")])]),t._v(" "),e("li",[e("code",[t._v("SupervisorLooped")])]),t._v(" "),e("li",[e("code",[t._v("UnableToLaunchProcess")])]),t._v(" "),e("li",[e("code",[t._v("WorkerProcessRestarting")])])]),t._v(" "),e("h2",{attrs:{id:"notifications"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notifications"}},[t._v("#")]),t._v(" Notifications")]),t._v(" "),e("p",[t._v("Notifications are planned in the next major version of the TMI Cluster. It will send messages, if for example complete instances have failed and have been cleaned up by the purge command.")])])}),[],!1,null,null,null);s.default=n.exports}}]);